# Generated by Django 5.2 on 2025-05-13 07:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import main.models
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('location', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.CharField(max_length=255)),
                ('stars_rating', models.PositiveSmallIntegerField(default=3, help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('total_rooms', models.PositiveIntegerField(default=0)),
                ('total_occupied_rooms', models.PositiveIntegerField(default=0)),
                ('price_per_night', models.DecimalField(decimal_places=2, default=60.99, max_digits=6)),
                ('amenities', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Hotel',
                'verbose_name_plural': 'Hotels',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=30, unique=True)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, default=' ', max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, default=' ', max_length=50, null=True)),
                ('country', models.CharField(blank=True, default=' ', max_length=100, null=True)),
                ('city', models.CharField(blank=True, default=' ', max_length=100, null=True)),
                ('profile_picture', models.ImageField(default='profile_pictures/profile.png', upload_to='profile_pictures/admins')),
                ('years_of_experience', models.PositiveIntegerField(default=0)),
                ('join_date', models.DateField(auto_now_add=True)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('unknown', 'Unknown')], default='Unknown', max_length=7)),
                ('department', models.CharField(choices=[('owner', 'Owner'), ('staff', 'Staff'), ('tour_guide', 'Tour Guide'), ('customer_support', 'Customer Support'), ('hotel_manager', 'Hotel Manager')], max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admins',
            },
        ),
        migrations.CreateModel(
            name='HotelImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=main.models.upload_to_hotel_images)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('Reservation', 'Reservation'), ('Payment', 'Payment'), ('Trip', 'Trip'), ('Security', 'Security'), ('Hotel', 'Hotel')], max_length=50)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('unread', 'Unread'), ('read', 'Read')], default='unread', max_length=10)),
                ('priority', models.CharField(choices=[('urgent', 'urgent'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low')], default='medium', max_length=6)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('capacity', models.IntegerField(help_text='Number of people this trip can accommodate.', validators=[django.core.validators.MinValueValidator(1.0)])),
                ('sold_tickets', models.IntegerField(db_default=0, default=0)),
                ('trip_type', models.CharField(blank=True, choices=[('standard', 'Standard'), ('all_inclusive', 'All-Inclusive'), ('group', 'Group Travel'), ('solo', 'Solo Travel'), ('road_trip', 'Road Trip & Self-Drive'), ('cruise', 'Cruise & Island Hopping')], max_length=50, null=True)),
                ('experience', models.CharField(choices=[('adventure', 'Adventure'), ('cultural', 'Cultural & Historical'), ('eco', 'Eco-Tourism & Nature'), ('wellness', 'Wellness & Spa'), ('romantic', 'Romantic & Honeymoon'), ('festival', 'Festival & Events'), ('pilgrimage', 'Religious & Pilgrimage')], max_length=50)),
                ('price_category', models.CharField(blank=True, choices=[('budget', 'Budget'), ('economy', 'Economy'), ('business', 'Business'), ('luxury', 'Luxury')], max_length=50, null=True)),
                ('destination', models.CharField(max_length=100)),
                ('destination_type', models.CharField(blank=True, choices=[('city', 'City'), ('beach', 'Beach'), ('mountain', 'Mountain'), ('island', 'Island'), ('cruise', 'Cruise')], max_length=50, null=True)),
                ('transport', models.CharField(choices=[('car', 'car'), ('bus', 'bus'), ('air-plane', 'air-plane'), ('cruise', 'Cruise Ship')], max_length=50)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0')), django.core.validators.MaxValueValidator(Decimal('49.0'))])),
                ('stars_rating', models.FloatField(db_default=3, help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(Decimal('1.0')), django.core.validators.MaxValueValidator(Decimal('5.0'))])),
                ('status', models.CharField(default='coming', max_length=10)),
                ('departure_date', models.DateTimeField()),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('is_one_way', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_trips', to='main.admin')),
                ('guide', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='guiding', to='main.admin')),
                ('hotel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.hotel')),
            ],
            options={
                'verbose_name': 'Trip',
                'verbose_name_plural': 'Trips',
            },
        ),
        migrations.CreateModel(
            name='DepartureTrip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('sold_tickets', models.IntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departure_places', to='main.trip')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, default=' ', max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, default=' ', max_length=50, null=True)),
                ('country', models.CharField(blank=True, default=' ', max_length=100, null=True)),
                ('city', models.CharField(blank=True, default=' ', max_length=100, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('profile_picture', models.ImageField(default='profile_pictures/profile.png', upload_to='profile_pictures/customers')),
                ('loyalty_points', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(500)])),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('unknown', 'Unknown')], default='Unknown', max_length=7)),
                ('favorite_currency', models.CharField(choices=[('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('CAD', 'Canadian Dollar'), ('DZD', 'Algerian Dinar')], default='USD', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL)),
                ('favorite_trips', models.ManyToManyField(blank=True, related_name='favorited_by', to='main.trip')),
                ('purchased_trips', models.ManyToManyField(blank=True, related_name='purchasers', to='main.trip')),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
            },
        ),
        migrations.CreateModel(
            name='TripImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=main.models.upload_to_trip_images)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='main.trip')),
            ],
        ),
        migrations.AddConstraint(
            model_name='trip',
            constraint=models.UniqueConstraint(fields=('title', 'created_by'), name='unique_trip_signature'),
        ),
    ]
